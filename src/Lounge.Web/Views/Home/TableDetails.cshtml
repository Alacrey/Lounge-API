@model Lounge.Web.Models.ViewModels.TableDetailsViewModel

@{
    ViewData["Title"] = "Table Details";
}

<div>
    <dl>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Id)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Id)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.CreatedOn)
        </dt>
        <dd class="col-sm-10">
            <span class="utc-to-local" data-time="@Model.CreatedOn.ToString("o", System.Globalization.CultureInfo.InvariantCulture)">
                @Html.DisplayFor(model => model.CreatedOn)
            </span>
        </dd>

        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.VerifiedOn)
        </dt>
        @{
            var isVerified = Model.VerifiedOn != null;
            var verifiedClass = isVerified ? "utc-to-local" : "";
        }
        <dd class="col-sm-10">
            <span class="@verifiedClass" data-time="@Model.VerifiedOn?.ToString("o", System.Globalization.CultureInfo.InvariantCulture)">
                @Html.DisplayFor(model => model.VerifiedOn)
            </span>
        </dd>
        @if (Model.DeletedOn is not null)
        {
            <dt class="col-sm-2">
                @Html.DisplayNameFor(model => model.DeletedOn)
            </dt>
            <dd class="col-sm-10">
                <span class="utc-to-local" data-time="@Model.DeletedOn.Value.ToString("o", System.Globalization.CultureInfo.InvariantCulture)">
                    @Html.DisplayFor(model => model.DeletedOn)
                </span>
            </dd>
        }
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Format)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Format)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Tier)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Tier)
        </dd>
    </dl>
    <hr />
    <h2>@Html.DisplayNameFor(model => model.Url)</h2>
    <img src="@Model.Url" class="img-fluid"/>
    <hr />
    @{
        var showMultiplier = Model.Teams.Any(t => t.Scores.Any(s => s.Multiplier != 1));
    }
    <table class="table table-striped table-dark">
        <thead>
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Teams[0].Rank)
                </th>
                <th scope="col" style="width: 32px"></th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Teams[0].Scores[0].PlayerName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Teams[0].Scores[0].Score)
                </th>
                @if (showMultiplier)
                {
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Teams[0].Scores[0].MultiplierString)
                    </th>
                }
                @if (Model.VerifiedOn is not null)
                {
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Teams[0].Scores[0].PrevMmr)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Teams[0].Scores[0].Delta)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Teams[0].Scores[0].NewMmr)
                    </th>
                }
            </tr>
        </thead>
        @foreach (var team in Model.Teams)
        {
            @foreach (var score in team.Scores)
            {
                <tr>
                    <th scope="row">
                        @Html.DisplayFor(modelItem => team.Rank)
                    </th>
                    <td scope="row">
                        @if(score.PlayerCountryCode != null)
                        {
                            <img src="~/img/flags/@(score.PlayerCountryCode).png" style="width: 30px"/>
                        }
                    </td>
                    <td>
                        <a asp-action="PlayerDetails" asp-route-id="@score.PlayerId">@Html.DisplayFor(modelItem => score.PlayerName)</a>
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => score.Score)
                    </td>
                    @if (showMultiplier)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => score.MultiplierString)
                        </td>
                    }
                    @if (Model.VerifiedOn is not null)
                    {
                        <td>
                            @Html.DisplayFor(modelItem => score.PrevMmr)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => score.Delta)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => score.NewMmr)
                        </td>
                    }
                </tr>
            }
        }
    </table>
</div>
