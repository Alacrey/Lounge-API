@using Lounge.Web.Settings
@using Lounge.Web.Stats
@inject ILoungeSettingsService LoungeSettingsService
@model Lounge.Web.Models.ViewModels.LeaderboardViewModel

@{
    ViewData["Title"] = "Leaderboard";
}

<div class="navbar navbar-expand-sm navbar-dark bg-dark rounded py-0" style="margin-bottom: 14px;">
    <div class="container-fluid">
        <span class="navbar-brand">Seasons</span>
        <button class="navbar-toggler" type="button" data-toggle="collapse" data-target="#seasonSelector">
            <span class="navbar-toggler-icon"></span>
        </button>
        <div class="collapse navbar-collapse justify-content-md-center" id="seasonSelector">
            <ul class="navbar-nav">
                @foreach (var season in Model.ValidSeasons)
                {
                    <li class="nav-item">
                        <a class="nav-link @(season == Model.Season ? "active" : "")" asp-action="Leaderboard" asp-route-season="@season" asp-route-sortBy="@Model.SortColumn" asp-route-filter="@Model.Filter">Season @season</a>
                    </li>
                }
            </ul>
        </div>
    </div>
</div>
<div class="text-center">
    <div class="mb-3">
        <form asp-action="Leaderboard" method="get">
            <input type="hidden" name="season" value="@Model.Season">
            <input type="hidden" name="sortBy" value="@Model.SortColumn">
            <div class="form-row">
                <div class="col-md-5">
                    <input type="text" class="form-control bg-dark text-light" placeholder="Player's name" name="filter" value="@Model.Filter" style="z-index: 3">
                </div>
                <div class="col-md-3">
                    <select class="form-control bg-dark text-light" name="country">
                        @{
                            var selectedAttribute = Model.CountryCodeFilter == null ? "selected" : string.Empty;
                        }
                        <!option value="" @selectedAttribute>All Countries</!option>

                        @foreach (var country in Model.ValidCountryCodes.OrderBy(c => LoungeSettingsService.CountryNames[c]))
                        {
                            selectedAttribute = Model.CountryCodeFilter == country ? "selected" : string.Empty;
                            <!option value="@country" @selectedAttribute>@LoungeSettingsService.CountryNames[country]</!option>
                        }
                    </select>
                </div>
                <div class="col-md-2">
                    <button class="btn btn-dark btn-block" type="submit">Search</button>
                </div>
                <div class="col-md-2">
                    <div class="dropdown">
                        <button class="btn btn-dark dropdown-toggle btn-block" type="button" id="dropdownMenuButton" data-toggle="dropdown">
                        Sort Order
                        </button>
                        <div class="dropdown-menu" aria-labelledby="dropdownMenuButton">
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.Name" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].Name)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.Mmr" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].Mmr)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.MaxMmr" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].MaxMmr)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.WinRate" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].WinRate)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.WinLossLast10" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].WinLossLastTen)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.GainLast10" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].GainLossLastTen)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.EventsPlayed" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].EventsPlayed)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.LargestGain" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].LargestGain)</a>
                        <a asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@LeaderboardSortOrder.LargestLoss" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" class="dropdown-item">@Html.DisplayNameFor(m => m.Players[0].LargestLoss)</a>
                        </div>
                    </div>
                </div>
            </div>
        </form>
        
    </div>
    <div class="table-responsive">
        <table class="table table-striped table-dark table-sm">
            <thead>
                <tr>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].OverallRank)
                    </th>
                    <th scope="col" style="width: 32px"></th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].Name)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].Mmr)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].MaxMmr)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].WinRate)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].WinLossLastTen)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].GainLossLastTen)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].EventsPlayed)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].LargestGain)
                    </th>
                    <th scope="col">
                        @Html.DisplayNameFor(model => model.Players[0].LargestLoss)
                    </th>
                </tr>
            </thead>
            @foreach (var player in Model.Players)
            {
                <tr>
                    <th scope="row" class="rank-@player.MmrRank!.Division">
                        @Html.DisplayFor(modelItem => player.OverallRank)
                    </th>
                    <td scope="row">
                        @if(player.CountryCode != null)
                        {
                            <img src="~/img/flags/@(player.CountryCode).png" style="width: 30px"/>
                        }
                    </td>
                    <td class="rank-@player.MmrRank.Division">
                        <a asp-action="PlayerDetails" asp-route-id="@player.Id" asp-route-season="@Model.Season" style="color:inherit; white-space: nowrap">@Html.DisplayFor(modelItem => player.Name)</a>
                    </td>
                    <td class="rank-@player.MmrRank.Division">
                        @Html.DisplayFor(modelItem => player.Mmr)
                    </td>
                    <td class="rank-@player.MaxMmrRank!.Division">
                        @Html.DisplayFor(modelItem => player.MaxMmr)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.WinRate)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.WinLossLastTen)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.GainLossLastTen)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.EventsPlayed)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.LargestGain)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => player.LargestLoss)
                    </td>
                </tr>
            }
        </table>
    </div>

    @{
        var prevDisabled = !Model.HasPrevPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav>
        <ul class="pagination pagination-dark">
            <li class="page-item @prevDisabled"><a class="page-link" asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@Model.SortColumn" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" asp-route-page="@(Model.Page - 1)">Previous</a></li>
            <li class="page-item @nextDisabled"><a class="page-link" asp-action="Leaderboard" asp-route-season="@Model.Season" asp-route-sortBy="@Model.SortColumn" asp-route-filter="@Model.Filter" asp-route-country="@Model.CountryCodeFilter" asp-route-page="@(Model.Page + 1)">Next</a></li>
        </ul>
    </nav>
</div>
