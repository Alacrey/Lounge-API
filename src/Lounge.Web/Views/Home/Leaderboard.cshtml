@model Lounge.Web.Models.ViewModels.LeaderboardViewModel

@{
    ViewData["Title"] = "Leaderboard";
}

<div class="text-center">
    <form asp-action="Leaderboard" method="get">
        <div class="input-group mb-3">
            <input type="text" class="form-control bg-dark text-light" placeholder="Player's name" name="filter" value="@Model.Filter" style="z-index: 3">
            <div class="input-group-append">
                <button class="btn btn-outline-secondary" type="submit">Search</button>
            </div>
        </div>
    </form>
    <table class="table table-striped table-dark table-sm">
        <thead>
            <tr>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].OverallRank)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].Name)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].Mmr)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].MaxMmr)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].WinRate)
                </th>
                <th scope="col">
                    W - L<br/>(Last 10)
                    @*@Html.DisplayNameFor(model => model.Players[0].WinLossLastTen)*@
                </th>
                <th scope="col">
                    Gain/Loss<br/>(Last 10)
                    @*@Html.DisplayNameFor(model => model.Players[0].GainLossLastTen)*@
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].EventsPlayed)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].LargestGain)
                </th>
                <th scope="col">
                    @Html.DisplayNameFor(model => model.Players[0].LargestLoss)
                </th>
            </tr>
        </thead>
        @foreach (var player in Model.Players)
        {
            <tr>
                <th scope="row" class="rank-@player.MmrRank">
                    <b>@Html.DisplayFor(modelItem => player.OverallRank)</b>
                </th>
                <td class="rank-@player.MmrRank">
                    <a asp-action="PlayerDetails" asp-route-id="@player.Id" style="color:inherit"><b>@Html.DisplayFor(modelItem => player.Name)</b></a>
                </td>
                <td class="rank-@player.MmrRank">
                    @Html.DisplayFor(modelItem => player.Mmr)
                </td>
                <td class="rank-@player.MaxMmrRank">
                    @Html.DisplayFor(modelItem => player.MaxMmr)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => player.WinRate)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => player.WinLossLastTen)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => player.GainLossLastTen)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => player.EventsPlayed)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => player.LargestGain)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => player.LargestLoss)
                </td>
            </tr>
        }
    </table>

    @{
        var prevDisabled = !Model.HasPrevPage ? "disabled" : "";
        var nextDisabled = !Model.HasNextPage ? "disabled" : "";
    }
    <nav>
        <ul class="pagination pagination-dark">
            <li class="page-item @prevDisabled"><a class="page-link" asp-action="Leaderboard" asp-route-page="@(Model.Page - 1)" asp-route-filter="@Model.Filter">Previous</a></li>
            <li class="page-item @nextDisabled"><a class="page-link" asp-action="Leaderboard" asp-route-page="@(Model.Page + 1)" asp-route-filter="@Model.Filter">Next</a></li>
        </ul>
    </nav>
</div>
